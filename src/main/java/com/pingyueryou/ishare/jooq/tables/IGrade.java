/*
 * This file is generated by jOOQ.
*/
package com.pingyueryou.ishare.jooq.tables;


import com.pingyueryou.ishare.jooq.Indexes;
import com.pingyueryou.ishare.jooq.Ishare;
import com.pingyueryou.ishare.jooq.Keys;
import com.pingyueryou.ishare.jooq.tables.records.IGradeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IGrade extends TableImpl<IGradeRecord> {

    private static final long serialVersionUID = -1669339391;

    /**
     * The reference instance of <code>ishare.i_grade</code>
     */
    public static final IGrade I_GRADE = new IGrade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IGradeRecord> getRecordType() {
        return IGradeRecord.class;
    }

    /**
     * The column <code>ishare.i_grade.id</code>.
     */
    public final TableField<IGradeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>ishare.i_grade.name</code>.
     */
    public final TableField<IGradeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ishare.i_grade.order</code>.
     */
    public final TableField<IGradeRecord, Integer> ORDER = createField("order", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("999999", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>ishare.i_grade.created_at</code>.
     */
    public final TableField<IGradeRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>ishare.i_grade.updated_at</code>.
     */
    public final TableField<IGradeRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>ishare.i_grade</code> table reference
     */
    public IGrade() {
        this(DSL.name("i_grade"), null);
    }

    /**
     * Create an aliased <code>ishare.i_grade</code> table reference
     */
    public IGrade(String alias) {
        this(DSL.name(alias), I_GRADE);
    }

    /**
     * Create an aliased <code>ishare.i_grade</code> table reference
     */
    public IGrade(Name alias) {
        this(alias, I_GRADE);
    }

    private IGrade(Name alias, Table<IGradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private IGrade(Name alias, Table<IGradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ishare.ISHARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.I_GRADE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IGradeRecord, Long> getIdentity() {
        return Keys.IDENTITY_I_GRADE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IGradeRecord> getPrimaryKey() {
        return Keys.KEY_I_GRADE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IGradeRecord>> getKeys() {
        return Arrays.<UniqueKey<IGradeRecord>>asList(Keys.KEY_I_GRADE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IGrade as(String alias) {
        return new IGrade(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IGrade as(Name alias) {
        return new IGrade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IGrade rename(String name) {
        return new IGrade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IGrade rename(Name name) {
        return new IGrade(name, null);
    }
}
